plugins {
    id 'com.palantir.git-version' version '0.11.0'
    id 'io.franzbecker.gradle-lombok' version '3.3.0' // https://github.com/franzbecker/gradle-lombok/blob/master/examples/delombok-gradle-groovy/build.gradle
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'war'

group 'com.ezekielnewren'
version gitVersion()

sourceCompatibility = 1.11

repositories {
    mavenCentral()
    jcenter()
}

lombok { // optional: values below are the defaults
    version = "1.18.12"
    sha256 = "" // "49381508ecb02b3c173368436ef71b24c0d4418ad260e6cc98becbcf4b345406"
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'javax:javaee-api:7.0'

    // webauthn server library
    // https://developers.yubico.com/java-webauthn-server/
    // https://developers.yubico.com/java-webauthn-server/JavaDoc/webauthn-server-core/1.6.0
    implementation 'com.yubico:webauthn-server-core:1.6.0'

    // SERIALIZATION AND DATA STORAGE
    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    implementation 'org.mongodb:mongo-java-driver:3.12.1'
    // https://projectlombok.org/setup/gradle
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.1'

    // https://mvnrepository.com/artifact/org.json/json
    // DO NOT USE THIS USE JACKSON FOR CUSTOM JSON OBJECTS!!! implementation 'org.json:json:20190722'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.9'


    // DATA STRUCTURES
    implementation 'com.google.collections:google-collections:1.0-rc2'

    //implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    //implementation 'org.apache.logging.log4j:log4j-core:2.13.0'

}

task createProperties(dependsOn: processResources) {
    doLast {
        File resources = new File("$projectDir/src/main/resources");
        resources.mkdir();
        new File(resources, "build.info").withWriter { w ->
            Properties p = new Properties()
            p['version'] = version
            p['fqdn'] = "www.ezekielnewren.com"
            p['title'] = "Webauthn Demo"
            p['buildtime'] = Long.toString(System.currentTimeMillis())
            p['urlprefix'] = "/"+project.name+"/"
            p.store w, null
        }
    }
}

import io.franzbecker.gradle.lombok.task.DelombokTask

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
    doFirst {
        outputDir.deleteDir()
    }
}

javadoc {
    dependsOn delombok
    source = delombok.outputDir
    destinationDir = reporting.file("$buildDir/doc")
    failOnError = false
    doLast {
        delete "src/main/webapp/doc"
        ant.move file: "$buildDir/doc", todir: "src/main/webapp"
    }
}

classes {
    dependsOn createProperties
}

war {
    // the archive name must be constant so that IntelliJ
    // knows how to run/debug the servlet with tomcat
    archiveName project.name+'.war'
}



